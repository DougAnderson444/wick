syntax = "proto3";

package vino;

// Interface exported by the server.
service InvocationService {
  rpc Invoke(Invocation) returns (stream Output);
  rpc List(ListRequest) returns (ListResponse);
  rpc Stats(StatsRequest) returns (StatsResponse);
}

message OutputKind {
  oneof data {
    bytes messagepack = 1;
    string error = 2;
    string exception = 3;
    string test = 4;
    bool invalid = 5;
  }
}

message Entity {
  enum EntityKind {
    Invalid = 0;
    Test = 1;
    Schematic = 2;
    Component = 3;
    Provider = 4;
    Port = 5;
  }
  string name = 1;
  EntityKind kind = 2;
}

message Invocation {
  Entity origin = 1;
  Entity target = 2;
  map<string, bytes> msg = 3;
  string id = 4;
  string tx_id = 5;
  string encoded_claims = 6;
  string host_id = 7;
}

message Output {
  string port = 1;
  string invocation_id = 2;
  OutputKind payload = 3;
}

message ListRequest {}
message StatsRequest {}

message ListResponse {
  repeated Component component = 1;
}

message Component {
  message Port {
    string name = 1;
    string type = 2;
  }
  string name = 1;
  repeated Port inputs = 2;
  repeated Port outputs = 3;
}

message StatsResponse {

}