syntax = "proto3";

package vino;

// Interface exported by the server.
service InvocationService {
  rpc Invoke(Invocation) returns (stream Output);
  rpc List(ListRequest) returns (ListResponse);
  rpc Stats(StatsRequest) returns (StatsResponse);
}

message MessageKind {
  enum Kind {
    Invalid = 0;
    Error = 1;
    Exception = 2;
    Test = 3;
    MessagePack = 4;
    Signal = 5;
    JSON = 6;
  }
  enum OutputSignal {
    Done = 0;
    OpenBracket = 1;
    CloseBracket = 2;
  }
  Kind kind = 1;

  oneof data {
    bytes messagepack = 2;
    string message = 3;
    OutputSignal signal = 4;
    string json = 5;
  }
}

message Invocation {
  string origin = 1;
  string target = 2;
  map<string, MessageKind> msg = 3;
  string id = 4;
}

message Output {
  string port = 1;
  string invocation_id = 2;
  MessageKind payload = 3;
}

message ListRequest {}
message StatsRequest {}

message ListResponse { repeated Component components = 1; }

message Component {
  message Port {
    string name = 1;
    string type = 2;
  }
  enum ComponentKind {
    Component = 0;
    Schematic = 1;
  }
  string name = 1;
  ComponentKind kind = 2;
  repeated Port inputs = 3;
  repeated Port outputs = 4;
  repeated Provider providers = 5;
}

message Provider {
  string name = 1;
  repeated Component components = 2;
}

message StatsResponse { repeated Statistic stats = 1; }

message Statistic {
  string name = 1;
  uint32 runs = 2;
  uint32 errors = 3;
  DurationStatistics execution_statistics = 4;
 }

message DurationStatistics {
  uint64 min = 1;
  uint64 max = 2;
  uint64 average = 3;
}